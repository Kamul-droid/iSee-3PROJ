# ------------ Nettoyage complet ------------ #
# SI VOUS SOUHAITEZ REPRENDRE L'INSTALLATION DEPUIS LE DEBUT
# CES COMMANDES SUPPRIMERONT TOUTE LA CONFIGURATION KUBERNETES

kubectl delete all --all
kubectl delete pvc --all
kubectl delete pv --all
kubectl delete sc --all

# ------------ Création du serveur NFS ------------ #

# Première étape, s'assurer que le serveur nfs fonctionne

docker volume create nfs-exports
docker run -v nfs-exports:/exports -d --cap-add SYS_MODULE --name nfs --privileged cpuguy83/nfs-server /exports/nfs

# Pensez à vérifier que l'IP du serveur nfs 
# corresponde à l'IP présente dans les fichiers backend.yml et nginx.yml aux lignes 18.

docker inspect nfs 

# ------------ Déploiement MongoDB ------------ #

kubectl apply -f mongodb-secret.yaml
kubectl apply -f mongodb-sc.yaml 
kubectl apply -f mongodb.yaml 

# ------------ Configuration Replica set mongodb ------------ #

# Connectez vous au conteneur principal en utilisant le shell mongo

kubectl exec -it  isee-mongodb-0 -- mongosh

# Initialisez le Replica set, par défaut, il y a trois Replicas à ajouter à la liste des membres

rs.initiate(
   {
      _id: "MainReplicaSet",
      members: [
         { _id: 0, host : "isee-mongodb-0.mongodb-headless-service.default.svc.cluster.local:27017" },
         { _id: 1, host : "isee-mongodb-1.mongodb-headless-service.default.svc.cluster.local:27017" },
         { _id: 2, host : "isee-mongodb-2.mongodb-headless-service.default.svc.cluster.local:27017" },
      ]
   }
)

# Attendre jusqu'à ce que le serveur isee-mongodb-0 devienne le serveur primaire, 
# il affichera alors [direct : primary]test>
# Une fois que le changement est pris en compte, vous pouvez créer l'utilisateur backend.

use admin;

db.createUser(
  {
    user: 'demo',
    pwd: 'demo',
    roles: [{ role: 'readWrite', db: 'isee-db' }],
  },
);

exit

# Il faut ensuite se connecter aux autres Replicas pour les déclarer comme Secondaires

kubectl exec -it isee-mongodb-1 -- mongosh --quiet
db.getMongo().setReadPref('primaryPreferred')
exit

kubectl exec -it isee-mongodb-2 -- mongosh --quiet
db.getMongo().setReadPref('primaryPreferred')
exit

# ------------  Déploiement Backend ------------ #

kubectl apply -f backend-secret.yaml
kubectl apply -f backend-configmap.yaml 
kubectl apply -f backend.yaml

kubectl apply -f nginx-configmap.yaml
kubectl apply -f nginx.yaml 