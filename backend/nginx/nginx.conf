worker_processes  auto;

events {
	use epoll;
}


http {
	client_max_body_size 500M;

	log_format  main  '$remote_addr $remote_user [$time_local] "$request" '
		'$status "$http_referer" "$http_user_agent"';

	access_log  /dev/stdout  main;
	error_log   stderr debug;

	default_type  application/octet-stream;
	include       /usr/local/nginx/conf/mime.types;

	sendfile    on;
	tcp_nopush  on;
	tcp_nodelay on;

	vod_mode                           local;
	vod_metadata_cache                 metadata_cache 16m;
	vod_response_cache                 response_cache 512m;
	vod_last_modified_types            *;
	vod_segment_duration               9000;
	vod_align_segments_to_key_frames   on;
	vod_dash_fragment_file_name_prefix "segment";
	vod_hls_segment_file_name_prefix   "segment";

	vod_manifest_segment_durations_mode accurate;

	open_file_cache          max=1000 inactive=5m;
	open_file_cache_valid    2m;
	open_file_cache_min_uses 1;
	open_file_cache_errors   on;

	aio on;

    server {
        listen 80;
        server_name localhost;
		root /opt/static;

        location / {
            proxy_pass http://isee-backend:3000;
        }

		location /socket.io/ {
			proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
			proxy_set_header Host $host;

			proxy_pass http://isee-backend:3000;

			proxy_http_version 1.1;
			proxy_set_header Upgrade $http_upgrade;
			proxy_set_header Connection "upgrade";
		}

		location /hls/ {
			vod hls;
			alias /opt/static/videos/;
			add_header Access-Control-Allow-Headers '*';
			add_header Access-Control-Allow-Origin '*';
			add_header Access-Control-Allow-Methods 'GET, HEAD, OPTIONS';
		}

		location /thumb/ {
			vod thumb;
			alias /opt/static/videos/;
			add_header Access-Control-Allow-Headers '*';
			add_header Access-Control-Allow-Origin '*';
			add_header Access-Control-Allow-Methods 'GET, HEAD, OPTIONS';
		}

		location /dash/ {
			vod dash;
			alias /opt/static/videos/;
			add_header Access-Control-Allow-Headers '*';
			add_header Access-Control-Allow-Origin '*';
			add_header Access-Control-Allow-Methods 'GET, HEAD, OPTIONS';
		}

		location /videos/upload {
			add_header Access-Control-Allow-Headers '*';
			add_header Access-Control-Allow-Origin '*';
			add_header Access-Control-Allow-Methods 'POST, HEAD, OPTIONS';
			# Pass altered request body to this location
			upload_pass @test;

			# Store files to this directory
			# The directory is hashed, subdirectories 0 1 2 3 4 5 6 7 8 9 should exist
			upload_store /opt/static/videos/;

            # Allow uploaded files to be world readable
            upload_store_access user:rw group:rw all:r;

			# Set specified fields in request body
			upload_set_form_field $upload_field_name.name "$upload_file_name";
			upload_set_form_field $upload_field_name.content_type "$upload_content_type";
			upload_set_form_field $upload_field_name.path "$upload_tmp_path";

			# Inform backend about hash and size of a file
			upload_aggregate_form_field "$upload_field_name.md5" "$upload_file_md5";
			upload_aggregate_form_field "$upload_field_name.size" "$upload_file_size";

			upload_pass_form_field "^submit$|^description$";

			upload_cleanup 400 404 499 500-505;
		}

		# Pass altered request body to a backend
		location @test {
			proxy_pass http://isee-backend:3000;
		}
    }
}
